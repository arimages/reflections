What happens when you initialize a repository? Why do you need to do it?

	It creates a space to place files in order to track them and the changes to them.

How is the staging area different from the working directory and the repository? What value do you think it offers?

	The staging area allows you to place the files from the working directory before commit the changes and view any differences between the staged document and the commit document. The repository includes the staging area, working directory and commit files. Git Commit and sublime not working so well together...

How can you use the staging area to make sure you have one commit per logical change?

	By using git diff you can see the differences between the working directory and the staging area to ensure the changes represent a logical shange before commit. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	When creating new versions but wanting to maintain the original version as an option. This would allow me to retain the orignal version and allow me to step back to correct any mistakes in the new version. 

How do the diagrams help you visualize the branch structure?

	It allows me to see the logical flow of commits relative to the branchs they are on.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	I was unable to merge the branchs because of a merge conflict... But if I did they coin branch would have went away and a new master merge point is created which is shown in the diagram so we know which commits were combined in the merge.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

	Automatic merging can ensure commits are not left out of branches you wish to combine, this could be bad if there are conflicts which would need to be resolved before losing committed code changes. Manual merges would not have the problem of orphaned branches being left out.

